{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","className","Info","재고","connect","state","console","log","reducer","alert열렸니","reducer2","useState","alert변경","누른탭변경","useContext","재고context","타이머","setTimeout","clearTimeout","useParams","history","useHistory","찾은상품","shoes","find","x","src","width","onClick","재고변경","dispatch","type","데이터","name","quan","push","Nav","variant","defaultActiveKey","Item","Link","eventKey","Table","responsive","map","a","i","key","aria-hidden","React","createContext","Card","Test","App","Data","shoes변경","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","as","to","NavDropdown","Divider","exact","path","Jumbotron","Button","Provider","value","axios","get","then","result","data","catch","초기값","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById","ServiceWorker","regular"],"mappings":"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","file":"static/js/main.73f6d76c.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 0,\r\n    title: \"White and Black\",\r\n    content: \"Born in France\",\r\n    price: 120000,\r\n  },\r\n\r\n  {\r\n    id: 1,\r\n    title: \"Red Knit\",\r\n    content: \"Born in Seoul\",\r\n    price: 110000,\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    title: \"Grey Yordan\",\r\n    content: \"Born in the States\",\r\n    price: 130000,\r\n  },\r\n];\r\n","/* eslint-disable */\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Detail.scss\";\r\nimport { 재고context } from \"./App.js\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet 박스 = styled.div`\r\n  padding-top: 30px;\r\n`;\r\nlet 제목 = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.색상};\r\n`;\r\n\r\nfunction Detail(props) {\r\n  let [alert, alert변경] = useState(true);\r\n  let [inputData, inputData변경] = useState(\"\");\r\n\r\n  let [누른탭, 누른탭변경] = useState(0);\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  let 재고 = useContext(재고context);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => {\r\n      alert변경(false);\r\n    }, 2000);\r\n    console.log(\"안녕\");\r\n    return () => {\r\n      clearTimeout(타이머);\r\n    };\r\n  }, []);\r\n\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n  let 찾은상품 = props.shoes.find((x) => x.id == id);\r\n  let [탭, 탭변경] = useState(0);\r\n  let [click, setClick] = useState(false);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <박스>\r\n        <제목 className=\"red\">Detail</제목>\r\n      </박스>\r\n\r\n      {/* { inputData }\r\n      <input onChange={(e)=>{ inputData변경(e.target.value) }} /> */}\r\n\r\n      {/* {\r\n        alert === true\r\n          ? (<div className=\"my-alert2\">\r\n            <p>재고가 얼마 남지 않았습니다</p>\r\n          </div>)\r\n          : null\r\n      } */}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src=\"https://codingapple1.github.io/shop/shoes1.jpg\"\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-2\">\r\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n          <p>{찾은상품.content}</p>\r\n          <p>{찾은상품.price}원</p>\r\n          <Info 재고={props.재고}></Info>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([9, 11, 12]);\r\n              props.dispatch({\r\n                type: \"항목추가\",\r\n                데이터: { id: 찾은상품.id, name: 찾은상품.title, quan: 1 },\r\n              });\r\n              history.push(\"/cart\");\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(0);\r\n            }}\r\n          >\r\n            상품설명\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(1);\r\n            }}\r\n          >\r\n            배송정보\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      {/* <CSSTransition in={스위치} classNames=\"wow\" timeout={500}> */}\r\n      <TabContent 누른탭={누른탭} 스위치변경={스위치변경} />\r\n      {/* </CSSTransition> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  });\r\n\r\n  if (props.누른탭 === 0) {\r\n    return <div className=\"p-4 text-left\">0번째 내용입니다</div>;\r\n  } else if (props.누른탭 === 1) {\r\n    return <div className=\"p-4 text-left\">1번째 내용입니다</div>;\r\n  } else if (props.누른탭 === 2) {\r\n    return <div className=\"p-4 text-left\">2번째 내용입니다</div>;\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n  return <p>재고 : {props.재고[0]}</p>;\r\n}\r\n\r\nfunction state를props화(state) {\r\n  console.log(state);\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Detail);\r\n\r\n// import styled from 'styled-components';\r\n\r\n// let Title = styled.h4`\r\n//     font-size : 20px;\r\n//     text-align : center;\r\n//     margin : 20px;\r\n//     color : ${props => props.primary};\r\n//   `\r\n\r\n// class App extends Component {\r\n//   let timer = null;\r\n\r\n//   componentDidMount() {\r\n//     timer = setTimeout(() => console.log('Hello, World!'), 3000)\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     clearTimeout(timer);\r\n//   }\r\n// }\r\n\r\n// function Tab(props) {\r\n\r\n//   if (props.탭 === 0) {\r\n//     return <p>탭0입니다</p>\r\n//   } else if (props.탭 === 1) {\r\n//     return <p>탭1입니다</p>\r\n//   }else if (props.탭 === 2) {\r\n//     return <p>탭2입니다</p>\r\n//   }\r\n// }\r\n\r\n{\r\n  /* <button onClick={() => { 탭변경(0) }}>0번</button>\r\n<button onClick={() => { 탭변경(1) }}>1번</button>\r\n<button onClick={() => { 탭변경(2) }}>2번</button>\r\n<Nav variant=\"tabs\" defaultActiveKey=\"/home\">\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-0\" onClick={()=>{setClick(false);탭변경(0);}}>Active</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\" onClick={()=>{setClick(false);탭변경(1);}}>Option 2</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-2\" onClick={()=>{탭변경(2);}}>Option 3</Nav.Link>\r\n  </Nav.Item>\r\n\r\n</Nav>\r\n    \r\n<CSSTransition in={click} classNames=\"roll\" timeout={500}>\r\n<Tab 탭={탭} 클릭됨={클릭됨} setClick={setClick}></Tab>\r\n</CSSTransition> */\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Cart(props) {\r\n  return (\r\n    <div>\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>변경</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.state.map((a, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{a.id}</td>\r\n                <td>{a.name}</td>\r\n                <td>{a.quan}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => {\r\n                      props.dispatch({ type: \"수량증가\", 데이터: a.id });\r\n                    }}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      props.dispatch({ type: \"수량감소\", 데이터: a.id });\r\n                    }}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {props.alert열렸니 === true ? (\r\n        <div className=\"my-alert2\">\r\n          <p>\r\n            지금 구매하시면 신규할인 20%\r\n            <button\r\n              className=\"close\"\r\n              onClick={() => {\r\n                props.dispatch({ type: \"alert닫기\" });\r\n              }}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction state를props화(state) {\r\n  console.log(state);\r\n  return {\r\n    state: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(state를props화)(Cart);\r\n\r\n// export default Cart;\r\n","/* eslint-disable */\n\nimport React, { useState, useContext } from \"react\";\nimport { Navbar, Nav, NavDropdown, Button, Jumbotron } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Data from \"./data.js\";\nimport Detail from \"./Detail.js\";\nimport axios from \"axios\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport Cart from \"./Cart.js\";\n\nexport let 재고context = React.createContext();\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10, 11, 12]);\n  let [cart, cart변경] = useState([{ id: 0, name: \"이쁜신발\", quan: 1 }]);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/\">\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">\n              Detail\n            </Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Another action\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"background\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n            <재고context.Provider value={재고}>\n              <div className=\"row\">\n                {shoes.map((a, i) => {\n                  return <Card shoes={shoes[i]} i={i} key={i} />;\n                })}\n              </div>\n            </재고context.Provider>\n\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    console.log(result.data);\n                    shoes변경([...shoes, ...result.data]);\n                  })\n                  .catch(() => {\n                    console.log(\"실패했어요\");\n                  });\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <재고context.Provider value={재고}>\n            <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n          </재고context.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Cart></Cart>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나적었을때 이거 보여주셈</div>\n        </Route>\n      </Switch>\n\n      {/* https://codingapple1.github.io/shop/data2.json */}\n\n      {/* <Route path=\"/어쩌구\" component={Modal} ></Route> */}\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let 재고 = useContext(재고context);\n  let history = useHistory();\n\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.shoes.id);\n      }}\n    >\n      <img\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" + (props.i + 1) + \".jpg\"\n        }\n        width=\"100%\"\n      />\n      <h4>{props.shoes.title}</h4>\n      <p>\n        {props.shoes.content} & {props.shoes.price}\n      </p>\n      <Test></Test>\n    </div>\n  );\n}\nfunction Test() {\n  let 재고 = useContext(재고context);\n  return <p>{재고[0]}</p>;\n}\n\nexport default App;\n\n{\n  /* <재고Context.Provider value={재고}>  */\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers } from \"redux\";\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === \"alert닫기\") {\n    state = false;\n    return state;\n  } else {\n    return state;\n  }\n}\n\nlet 초기값 = [\n  { id: 0, name: \"멋진신발\", quan: 2 },\n  { id: 1, name: \"멋진신발2\", quan: 1 },\n];\n\nfunction reducer(state = 초기값, 액션) {\n  if (액션.type === \"항목추가\") {\n    //state안에 id : 액션.데이터 인게 있냐?\n    let found = state.findIndex((a) => {\n      return a.id === 액션.데이터.id;\n    });\n\n    if (found >= 0) {\n      let copy = [...state];\n      copy[found].quan++;\n      return copy;\n    } else {\n      let copy = [...state];\n      copy.push(액션.데이터);\n      return copy;\n    }\n  } else if (액션.type === \"수량증가\") {\n    let copy = [...state];\n    copy[액션.데이터].quan++;\n    return copy;\n  } else if (액션.type === \"수량감소\") {\n    let copy = [...state];\n    copy[액션.데이터].quan--;\n    return copy;\n  } else {\n    return state;\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// import {Provider} from 'react-redux';\n// import { createStore } from 'redux';\n\n// let store = createStore(()=>{ return [{ id : 0, name : '이쁜신발', quan : 1}] });\n\n// let store = createStore(combineReducers({reducer,reducer2}))\n\n// function reducer(state = store2, 액션){\n//   console.log('이건리듀서안의 코드에염', state, 액션);\n\n//   if (액션.type === '증가') {\n//     let 새거 = [...state];\n//     새거[0].quan++;\n//     return 새거\n//   } else {\n//     return state\n//   }\n\n// }\n\n// function reducer2(state = { name : 'park' }, 액션){\n//   console.log('');\n//   if (액션.type === '이름Kim') {\n//     let 새거 = {...state};\n//     새거.name = 'Kim';\n//     return 새거\n//   } else {\n//     return state\n//   }\n// }\n\n// let found = state.findIndex(a => a.id === 액션.데이터.id );\n// if ( found >= 0 ) {\n//   let copy = [...state];\n//   copy[found].quan++\n//   return copy\n// } else {\nServiceWorker.regular();\n"],"sourceRoot":""}